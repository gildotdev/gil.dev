---
import { getCollection, render } from "astro:content";
import Tag from "../components/Tag.astro";
import MainLayout from "../layouts/MainLayout.astro";
import { formatPublishDate } from "../lib/utils.ts";
import "../styles/global.css";
// 1. Generate a new path for every collection note
export async function getStaticPaths() {
  const notes = await getCollection("notes");
  return notes.map((note) => ({
    params: { slug: note.data.slug || note.id },
    props: { note },
  }));
}
// 2. When it's time to render, you can get the note directly from the prop
const { note } = Astro.props;
const { Content } = await render(note);

const {
  data: { title, date, lastmod, tags },
} = note;
---

<MainLayout title={title}>
  <article>
    <div class="flex flex-col md:flex-row justify-start gap-1 align-bottom">
      <time class="slab" datetime={date}>
        {formatPublishDate(date)}
      </time>
    </div>
    <Content />
    <footer>
      {
        tags.length > 0 && (
          <p>
            <img
              src="/img/tags.svg"
              width="24px"
              height="24px"
              class="inline"
              alt="Tag Icon"
            />{" "}
            {note.data.tags.map((tag: any, i: number) => (
              <Tag tag={tag} i={i} />
            ))}
          </p>
        )
      }
    </footer>
  </article>
</MainLayout>
